#!/bin/bash

# Jack Suann

ZIRCON_PATH=/home/jack/thesis/zircon
SYSCALL_ABIGEN=system/public/zircon/syscalls.abigen

DEFS_FILE=syscall_defs.h
TABLE_FILE=sys_table.c
SYSNO_FILE=sys_def.h

DEFINED_LIST=syscalls.list

AUTOGEN_TEXT="/* This is an autogenerated file, do not edit. */"

echo "Generating syscall files from syscalls.abigen..."

# initialise files
echo "${AUTOGEN_TEXT}
#include \"syscalls.h\"

zx_syscall_func sys_table[NUM_SYSCALLS] = {" > "${TABLE_FILE}"

echo "${AUTOGEN_TEXT}" > "${SYSNO_FILE}"
echo "${AUTOGEN_TEXT}" > "${DEFS_FILE}"

syscall=
syscall_num=0
while read line || [ -n "${line}" ]
do
    # skip empty lines, comments
    [ -z "${line}" ] && continue
    [[ "${line}" =~ ^# ]] && continue

    # ensure entire syscall def is on one line
    syscall="${syscall}${line}"
    [[ ! "${syscall}" =~ ^syscall.*\;$ ]] && continue

    syscall_name=$(sed -e 's/^syscall \([a-z0-9_]*\).*$/\1/' <<< "${syscall}")

    # get name for syscall number definition
    syscall_def="ZX_$(tr [a-z] [A-Z] <<< "${syscall_name}")"

    # define syscall number
    echo "#define ${syscall_def} ${syscall_num}" >> "${SYSNO_FILE}"

    # check if syscall has server side implementation
    # TODO actually check for definitions in syscall dir
    if grep -q "sys_${syscall_name}" "${DEFINED_LIST}"; then
        # declare kernel-side handler
        echo "void sys_${syscall_name}(seL4_MessageInfo_t tag, uint32_t handle);" >> "${DEFS_FILE}"
        # add to syscall table
        echo "    sys_${syscall_name}," >> "${TABLE_FILE}"
    else
        # add as undefined to syscall table
        echo "    sys_undefined," >> "${TABLE_FILE}"
    fi

    # TODO implement user side lib calls

    syscall=
    syscall_num=$((syscall_num + 1))
done < "${ZIRCON_PATH}/${SYSCALL_ABIGEN}"

# define total number of syscalls
echo "
#define NUM_SYSCALLS ${syscall_num}" >> "${DEFS_FILE}"

echo "};" >> "${TABLE_FILE}"

echo "Done."
